name: CI

on:
  - push
  - pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          default: true
          components: rustfmt, clippy

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-cache

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  build:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - { target: x86_64-apple-darwin, os: osx, output: Atlantis }
          - { target: x86_64-unknown-linux-gnu, os: linux-gnu, output: Atlantis }
          - { target: x86_64-unknown-linux-musl, os: linux-musl, output: Atlantis }
          - { target: x86_64-pc-windows-msvc, os: windows, output: Atlantis.exe }
    steps:
      - uses: actions/checkout@v3

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-cache

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust.target }}
          profile: minimal

      - name: Build app
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Atlantis-${{ matrix.rust.os }}-x86_64
          path: |
            ./target/release/${{ matrix.rust.output }}
            ${{ hashFiles('./target/${{ matrix.rust.output }}') }}
